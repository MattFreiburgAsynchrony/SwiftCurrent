{"kind":"symbol","abstract":[{"type":"text","text":"Adds an item to the workflow; enforces the "},{"code":"FlowRepresentable.WorkflowOutput","type":"codeVoice"},{"type":"text","text":" of the previous item matches the "},{"code":"FlowRepresentable.WorkflowInput","type":"codeVoice"},{"type":"text","text":" of this item."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcurrent\/workflow\/thenproceed(with:launchstyle:flowpersistence:)-3sepn"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow\/thenProceed(with:launchStyle:flowPersistence:)-3sepn"},"metadata":{"extendedModule":"SwiftCurrent","title":"thenProceed(with:launchStyle:flowPersistence:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"thenProceed"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"FR"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"launchStyle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC","text":"LaunchStyle"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flowPersistence"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC","text":"FlowPersistence"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent8WorkflowC","text":"Workflow"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":">"}],"externalID":"s:12SwiftCurrent8WorkflowC11thenProceed4with11launchStyle15flowPersistenceACyqd__Gqd__m_AA06LaunchH0CAA04FlowJ0CyXAtAA0L13RepresentableRd__0C5InputQyd__0C6OutputRtzlF","roleHeading":"Instance Method","modules":[{"name":"SwiftCurrent"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"F","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FlowRepresentable","type":"codeVoice"},{"text":".","type":"text"}]},"symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"thenProceed"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"FR"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"launchStyle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/LaunchStyle","text":"LaunchStyle","preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC"},{"kind":"text","text":" = .default, "},{"kind":"externalParam","text":"flowPersistence"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowPersistence","text":"FlowPersistence","preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC"},{"kind":"text","text":" = .default) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow","text":"Workflow","preciseIdentifier":"s:12SwiftCurrent8WorkflowC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowRepresentable","text":"FlowRepresentable","preciseIdentifier":"s:12SwiftCurrent17FlowRepresentableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WorkflowOutput"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WorkflowInput"}],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"a new workflow with the additional ","type":"text"},{"code":"FlowRepresentable","type":"codeVoice"},{"text":" item.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"text":"a reference to the next ","type":"text"},{"code":"FlowRepresentable","type":"codeVoice"},{"text":"’s concrete type in the workflow.","type":"text"}]}]},{"name":"launchStyle","content":[{"type":"paragraph","inlineContent":[{"text":"the ","type":"text"},{"code":"LaunchStyle","type":"codeVoice"},{"text":" the ","type":"text"},{"code":"FlowRepresentable","type":"codeVoice"},{"text":" should use while it’s part of this workflow.","type":"text"}]}]},{"name":"flowPersistence","content":[{"inlineContent":[{"type":"text","text":"a "},{"type":"codeVoice","code":"FlowPersistence"},{"type":"text","text":" representing how this item in the workflow should persist."}],"type":"paragraph"}]}]}],"sections":[],"schemaVersion":{"patch":0,"minor":2,"major":0},"hierarchy":{"paths":[["doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent","doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow"]]},"references":{"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/Workflow/thenProceed(with:launchStyle:flowPersistence:)-3sepn":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"thenProceed"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"FR"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"launchStyle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LaunchStyle","preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flowPersistence"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"FlowPersistence","preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Workflow","preciseIdentifier":"s:12SwiftCurrent8WorkflowC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":">"}],"url":"\/documentation\/swiftcurrent\/workflow\/thenproceed(with:launchstyle:flowpersistence:)-3sepn","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"F","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FlowRepresentable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Adds an item to the workflow; enforces the "},{"code":"FlowRepresentable.WorkflowOutput","type":"codeVoice"},{"type":"text","text":" of the previous item matches the "},{"code":"FlowRepresentable.WorkflowInput","type":"codeVoice"},{"type":"text","text":" of this item."}],"kind":"symbol","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow\/thenProceed(with:launchStyle:flowPersistence:)-3sepn","type":"topic","title":"thenProceed(with:launchStyle:flowPersistence:)","role":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent":{"type":"topic","url":"\/documentation\/swiftcurrent","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent","role":"collection","title":"SwiftCurrent","abstract":[],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/LaunchStyle":{"abstract":[{"type":"text","text":"An extendable class that indicates how a "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" should be launched."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LaunchStyle","kind":"identifier"}],"role":"symbol","title":"LaunchStyle","navigatorTitle":[{"text":"LaunchStyle","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/LaunchStyle","kind":"symbol","url":"\/documentation\/swiftcurrent\/launchstyle"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/Workflow":{"type":"topic","url":"\/documentation\/swiftcurrent\/workflow","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow","role":"symbol","title":"Workflow","abstract":[{"type":"text","text":"A doubly linked list of "},{"type":"codeVoice","code":"FlowRepresentableMetadata"},{"type":"text","text":"s; used to define a process."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Workflow"}],"navigatorTitle":[{"kind":"identifier","text":"Workflow"}],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/FlowPersistence":{"type":"topic","url":"\/documentation\/swiftcurrent\/flowpersistence","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowPersistence","role":"symbol","title":"FlowPersistence","abstract":[{"type":"text","text":"An extendable class that indicates how a "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" should be persisted."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlowPersistence"}],"navigatorTitle":[{"kind":"identifier","text":"FlowPersistence"}],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/FlowRepresentable":{"title":"FlowRepresentable","type":"topic","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowRepresentable","navigatorTitle":[{"kind":"identifier","text":"FlowRepresentable"}],"abstract":[{"type":"text","text":"A component in a "},{"code":"Workflow","type":"codeVoice"},{"type":"text","text":"; should be independent of the workflow context."}],"url":"\/documentation\/swiftcurrent\/flowrepresentable","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlowRepresentable"}],"kind":"symbol"}}}