{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"thenProceed","kind":"identifier"},{"text":"<","kind":"text"},{"text":"FR","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"FR","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"launchStyle","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LaunchStyle","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/LaunchStyle","preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC","kind":"typeIdentifier"},{"text":" = .default, ","kind":"text"},{"text":"flowPersistence","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"text":"FlowPersistence","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowPersistence","preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Workflow","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow","preciseIdentifier":"s:12SwiftCurrent8WorkflowC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"FR","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FR","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"FlowRepresentable","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowRepresentable","preciseIdentifier":"s:12SwiftCurrent17FlowRepresentableP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"FR","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"WorkflowInput","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Never","preciseIdentifier":"s:s5NeverO","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"a new workflow with the additional "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" item."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"a reference to the next ","type":"text"},{"code":"FlowRepresentable","type":"codeVoice"},{"text":"’s concrete type in the workflow.","type":"text"}]}],"name":"type"},{"content":[{"inlineContent":[{"type":"text","text":"the "},{"type":"codeVoice","code":"LaunchStyle"},{"type":"text","text":" the "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" should use while it’s part of this workflow."}],"type":"paragraph"}],"name":"launchStyle"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a "},{"code":"FlowPersistence","type":"codeVoice"},{"type":"text","text":" representing how this item in the workflow should persist."}]}],"name":"flowPersistence"}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":2},"abstract":[{"text":"Adds an item to the workflow; enforces the ","type":"text"},{"code":"FlowRepresentable.WorkflowOutput","type":"codeVoice"},{"text":" of the previous item matches the ","type":"text"},{"code":"FlowRepresentable.WorkflowInput","type":"codeVoice"},{"text":" of this item.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcurrent\/workflow\/thenproceed(with:launchstyle:flowpersistence:)-4fojl"]}],"metadata":{"symbolKind":"method","title":"thenProceed(with:launchStyle:flowPersistence:)","roleHeading":"Instance Method","extendedModule":"SwiftCurrent","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"thenProceed"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"FR"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"launchStyle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LaunchStyle","preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flowPersistence"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"FlowPersistence","preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Workflow","preciseIdentifier":"s:12SwiftCurrent8WorkflowC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":">"}],"modules":[{"name":"SwiftCurrent"}],"role":"symbol","externalID":"s:12SwiftCurrent8WorkflowCAAs5NeverO0C6OutputRtzrlE11thenProceed4with11launchStyle15flowPersistenceACyqd__Gqd__m_AA06LaunchJ0CAA04FlowL0CyctAA0N13RepresentableRd__AE0C5InputRtd__lF","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"F","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"F.WorkflowOutput"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow\/thenProceed(with:launchStyle:flowPersistence:)-4fojl"},"hierarchy":{"paths":[["doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent","doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow"]]},"sections":[],"references":{"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/Workflow":{"type":"topic","url":"\/documentation\/swiftcurrent\/workflow","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow","role":"symbol","title":"Workflow","abstract":[{"type":"text","text":"A doubly linked list of "},{"type":"codeVoice","code":"FlowRepresentableMetadata"},{"type":"text","text":"s; used to define a process."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Workflow"}],"navigatorTitle":[{"kind":"identifier","text":"Workflow"}],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/Workflow/thenProceed(with:launchStyle:flowPersistence:)-4fojl":{"title":"thenProceed(with:launchStyle:flowPersistence:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"thenProceed","kind":"identifier"},{"text":"<","kind":"text"},{"text":"FR","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FR","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"launchStyle","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LaunchStyle","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC"},{"text":", ","kind":"text"},{"text":"flowPersistence","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"FlowPersistence","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC"},{"text":") -> ","kind":"text"},{"text":"Workflow","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent8WorkflowC"},{"text":"<","kind":"text"},{"text":"FR","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"F","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"F.WorkflowOutput"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}]},"role":"symbol","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow\/thenProceed(with:launchStyle:flowPersistence:)-4fojl","url":"\/documentation\/swiftcurrent\/workflow\/thenproceed(with:launchstyle:flowpersistence:)-4fojl","type":"topic","abstract":[{"type":"text","text":"Adds an item to the workflow; enforces the "},{"type":"codeVoice","code":"FlowRepresentable.WorkflowOutput"},{"type":"text","text":" of the previous item matches the "},{"type":"codeVoice","code":"FlowRepresentable.WorkflowInput"},{"type":"text","text":" of this item."}],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent":{"type":"topic","url":"\/documentation\/swiftcurrent","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent","role":"collection","title":"SwiftCurrent","abstract":[],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/FlowPersistence":{"type":"topic","url":"\/documentation\/swiftcurrent\/flowpersistence","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowPersistence","role":"symbol","title":"FlowPersistence","abstract":[{"type":"text","text":"An extendable class that indicates how a "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" should be persisted."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlowPersistence"}],"navigatorTitle":[{"kind":"identifier","text":"FlowPersistence"}],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/FlowRepresentable":{"title":"FlowRepresentable","type":"topic","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowRepresentable","navigatorTitle":[{"kind":"identifier","text":"FlowRepresentable"}],"abstract":[{"type":"text","text":"A component in a "},{"code":"Workflow","type":"codeVoice"},{"type":"text","text":"; should be independent of the workflow context."}],"url":"\/documentation\/swiftcurrent\/flowrepresentable","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlowRepresentable"}],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/LaunchStyle":{"abstract":[{"type":"text","text":"An extendable class that indicates how a "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" should be launched."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LaunchStyle","kind":"identifier"}],"role":"symbol","title":"LaunchStyle","navigatorTitle":[{"text":"LaunchStyle","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/LaunchStyle","kind":"symbol","url":"\/documentation\/swiftcurrent\/launchstyle"}}}