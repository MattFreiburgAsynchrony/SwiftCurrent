{"kind":"symbol","abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"Workflow"},{"type":"text","text":" with a "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcurrent\/workflow\/init(_:launchstyle:flowpersistence:)-6msy7"]}],"metadata":{"roleHeading":"Initializer","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"F","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FlowRepresentable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","title":"init(_:launchStyle:flowPersistence:)","symbolKind":"init","modules":[{"name":"SwiftCurrent"}],"extendedModule":"SwiftCurrent","externalID":"s:12SwiftCurrent8WorkflowC_11launchStyle15flowPersistenceACyxGxm_AA06LaunchE0CAA04FlowG0C0C5InputQzctcfc","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"launchStyle"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC","kind":"typeIdentifier","text":"LaunchStyle"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flowPersistence"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WorkflowInput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC","text":"FlowPersistence"},{"kind":"text","text":")"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent","doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow"]]},"schemaVersion":{"patch":0,"major":0,"minor":2},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"launchStyle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/LaunchStyle","text":"LaunchStyle"},{"kind":"text","text":" = .default, "},{"kind":"externalParam","text":"flowPersistence"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WorkflowInput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowPersistence","text":"FlowPersistence"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"a reference to the first "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":"’s concrete type in the workflow."}],"type":"paragraph"}]},{"name":"launchStyle","content":[{"inlineContent":[{"text":"the ","type":"text"},{"type":"codeVoice","code":"LaunchStyle"},{"text":" the ","type":"text"},{"type":"codeVoice","code":"FlowRepresentable"},{"text":" should use while it’s part of this workflow.","type":"text"}],"type":"paragraph"}]},{"name":"flowPersistence","content":[{"inlineContent":[{"text":"a closure taking in the generic type from the ","type":"text"},{"code":"FlowRepresentable","type":"codeVoice"},{"text":" and returning a ","type":"text"},{"code":"FlowPersistence","type":"codeVoice"},{"text":" representing how this item in the workflow should persist.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow\/init(_:launchStyle:flowPersistence:)-6msy7"},"references":{"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/FlowPersistence":{"type":"topic","url":"\/documentation\/swiftcurrent\/flowpersistence","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowPersistence","role":"symbol","title":"FlowPersistence","abstract":[{"type":"text","text":"An extendable class that indicates how a "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" should be persisted."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlowPersistence"}],"navigatorTitle":[{"kind":"identifier","text":"FlowPersistence"}],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/Workflow/init(_:launchStyle:flowPersistence:)-6msy7":{"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"Workflow"},{"type":"text","text":" with a "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":"."}],"kind":"symbol","title":"init(_:launchStyle:flowPersistence:)","type":"topic","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"launchStyle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LaunchStyle","preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flowPersistence"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WorkflowInput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"FlowPersistence","preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC"},{"kind":"text","text":")"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"F","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FlowRepresentable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","url":"\/documentation\/swiftcurrent\/workflow\/init(_:launchstyle:flowpersistence:)-6msy7","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow\/init(_:launchStyle:flowPersistence:)-6msy7"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent":{"type":"topic","url":"\/documentation\/swiftcurrent","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent","role":"collection","title":"SwiftCurrent","abstract":[],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/Workflow":{"type":"topic","url":"\/documentation\/swiftcurrent\/workflow","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow","role":"symbol","title":"Workflow","abstract":[{"type":"text","text":"A doubly linked list of "},{"type":"codeVoice","code":"FlowRepresentableMetadata"},{"type":"text","text":"s; used to define a process."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Workflow"}],"navigatorTitle":[{"kind":"identifier","text":"Workflow"}],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/LaunchStyle":{"abstract":[{"type":"text","text":"An extendable class that indicates how a "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" should be launched."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LaunchStyle","kind":"identifier"}],"role":"symbol","title":"LaunchStyle","navigatorTitle":[{"text":"LaunchStyle","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/LaunchStyle","kind":"symbol","url":"\/documentation\/swiftcurrent\/launchstyle"}}}