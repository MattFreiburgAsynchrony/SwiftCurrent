{"abstract":[{"text":"Adds an item to the workflow; enforces the ","type":"text"},{"code":"FlowRepresentable.WorkflowOutput","type":"codeVoice"},{"text":" of the previous item matches the ","type":"text"},{"code":"FlowRepresentable.WorkflowInput","type":"codeVoice"},{"text":" of this item.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcurrent\/workflow\/thenproceed(with:launchstyle:flowpersistence:)-8uo29"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":2},"hierarchy":{"paths":[["doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent","doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"thenProceed"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"FR"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"launchStyle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LaunchStyle","preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/LaunchStyle"},{"kind":"text","text":" = .default, "},{"kind":"externalParam","text":"flowPersistence"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","text":"FlowPersistence","preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowPersistence"},{"kind":"text","text":" = .default) -> "},{"kind":"typeIdentifier","text":"Workflow","preciseIdentifier":"s:12SwiftCurrent8WorkflowC","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"FlowRepresentable","preciseIdentifier":"s:12SwiftCurrent17FlowRepresentableP","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowRepresentable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WorkflowInput"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"a new workflow with the additional "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" item."}]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a reference to the next "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":"’s concrete type in the workflow."}]}]},{"name":"launchStyle","content":[{"inlineContent":[{"text":"the ","type":"text"},{"code":"LaunchStyle","type":"codeVoice"},{"text":" the ","type":"text"},{"code":"FlowRepresentable","type":"codeVoice"},{"text":" should use while it’s part of this workflow.","type":"text"}],"type":"paragraph"}]},{"name":"flowPersistence","content":[{"type":"paragraph","inlineContent":[{"text":"a closure returning a ","type":"text"},{"code":"FlowPersistence","type":"codeVoice"},{"text":" representing how this item in the workflow should persist.","type":"text"}]}]}]}],"metadata":{"externalID":"s:12SwiftCurrent8WorkflowCA2A03AnyC0C10PassedArgsO0C6OutputRtzrlE11thenProceed4with11launchStyle15flowPersistenceACyqd__Gqd__m_AA06LaunchL0CAA04FlowN0CyXAtAA0P13RepresentableRd__s5NeverO0C5InputRtd__lF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"thenProceed","kind":"identifier"},{"text":"<","kind":"text"},{"text":"FR","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FR","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"launchStyle","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LaunchStyle","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC"},{"text":", ","kind":"text"},{"text":"flowPersistence","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC","text":"FlowPersistence"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCurrent8WorkflowC","text":"Workflow"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":">"}],"extendedModule":"SwiftCurrent","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"F","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"F.WorkflowOutput"},{"type":"text","text":" is "},{"type":"codeVoice","code":"AnyWorkflow.PassedArgs"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","symbolKind":"method","title":"thenProceed(with:launchStyle:flowPersistence:)","modules":[{"name":"SwiftCurrent"}],"roleHeading":"Instance Method"},"kind":"symbol","identifier":{"url":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow\/thenProceed(with:launchStyle:flowPersistence:)-8uo29","interfaceLanguage":"swift"},"references":{"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/Workflow":{"type":"topic","url":"\/documentation\/swiftcurrent\/workflow","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow","role":"symbol","title":"Workflow","abstract":[{"type":"text","text":"A doubly linked list of "},{"type":"codeVoice","code":"FlowRepresentableMetadata"},{"type":"text","text":"s; used to define a process."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Workflow"}],"navigatorTitle":[{"kind":"identifier","text":"Workflow"}],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent":{"type":"topic","url":"\/documentation\/swiftcurrent","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent","role":"collection","title":"SwiftCurrent","abstract":[],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/FlowRepresentable":{"title":"FlowRepresentable","type":"topic","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowRepresentable","navigatorTitle":[{"kind":"identifier","text":"FlowRepresentable"}],"abstract":[{"type":"text","text":"A component in a "},{"code":"Workflow","type":"codeVoice"},{"type":"text","text":"; should be independent of the workflow context."}],"url":"\/documentation\/swiftcurrent\/flowrepresentable","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlowRepresentable"}],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/LaunchStyle":{"abstract":[{"type":"text","text":"An extendable class that indicates how a "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" should be launched."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LaunchStyle","kind":"identifier"}],"role":"symbol","title":"LaunchStyle","navigatorTitle":[{"text":"LaunchStyle","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/LaunchStyle","kind":"symbol","url":"\/documentation\/swiftcurrent\/launchstyle"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/Workflow/thenProceed(with:launchStyle:flowPersistence:)-8uo29":{"title":"thenProceed(with:launchStyle:flowPersistence:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"thenProceed","kind":"identifier"},{"text":"<","kind":"text"},{"text":"FR","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"launchStyle"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCurrent11LaunchStyleC","kind":"typeIdentifier","text":"LaunchStyle"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flowPersistence"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:12SwiftCurrent15FlowPersistenceC","kind":"typeIdentifier","text":"FlowPersistence"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:12SwiftCurrent8WorkflowC","kind":"typeIdentifier","text":"Workflow"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"FR"},{"kind":"text","text":">"}],"conformance":{"constraints":[{"type":"codeVoice","code":"F"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"F.WorkflowOutput"},{"type":"text","text":" is "},{"type":"codeVoice","code":"AnyWorkflow.PassedArgs"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/Workflow\/thenProceed(with:launchStyle:flowPersistence:)-8uo29","url":"\/documentation\/swiftcurrent\/workflow\/thenproceed(with:launchstyle:flowpersistence:)-8uo29","type":"topic","abstract":[{"type":"text","text":"Adds an item to the workflow; enforces the "},{"type":"codeVoice","code":"FlowRepresentable.WorkflowOutput"},{"type":"text","text":" of the previous item matches the "},{"type":"codeVoice","code":"FlowRepresentable.WorkflowInput"},{"type":"text","text":" of this item."}],"kind":"symbol"},"doc://com.wwt.SwiftCurrent/documentation/SwiftCurrent/FlowPersistence":{"type":"topic","url":"\/documentation\/swiftcurrent\/flowpersistence","identifier":"doc:\/\/com.wwt.SwiftCurrent\/documentation\/SwiftCurrent\/FlowPersistence","role":"symbol","title":"FlowPersistence","abstract":[{"type":"text","text":"An extendable class that indicates how a "},{"type":"codeVoice","code":"FlowRepresentable"},{"type":"text","text":" should be persisted."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlowPersistence"}],"navigatorTitle":[{"kind":"identifier","text":"FlowPersistence"}],"kind":"symbol"}}}